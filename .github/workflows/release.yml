name: Release Build

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        target:
          - darwin-amd64
          - darwin-arm64
          - windows-amd64
          - linux-arm64-musl
          - linux-amd64-musl
          - windows-arm64
          - android-arm64
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha

      - name: Get tag name
        id: vars
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.5"

      - name: Setup web
        run: bash build.sh dev web
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FRONTEND_REPO: ${{ vars.FRONTEND_REPO }}

      - name: Build
        uses: OpenListTeam/cgo-actions@v1.2.2
        with:
          targets: ${{ matrix.target }}
          musl-target-format: $os-$musl-$arch
          github-token: ${{ secrets.GITHUB_TOKEN }}
          out-dir: build
          x-flags: |
            github.com/OpenListTeam/OpenList/v4/internal/conf.BuiltAt=${{ github.run_id }}
            github.com/OpenListTeam/OpenList/v4/internal/conf.GitAuthor=The OpenList Projects Contributors <noreply@openlist.team>
            github.com/OpenListTeam/OpenList/v4/internal/conf.GitCommit=${{ steps.short-sha.outputs.sha }}
            github.com/OpenListTeam/OpenList/v4/internal/conf.Version=${{ steps.vars.outputs.tag }}
            github.com/OpenListTeam/OpenList/v4/internal/conf.WebVersion=rolling
          output: openlist$ext

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: openlist_${{ steps.vars.outputs.tag }}_${{ matrix.target }}
          path: build/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get tag name
        id: vars
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: Release ${{ steps.vars.outputs.tag }}
          draft: false
          prerelease: false
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
